python $HOME/creations/fortune.py | cowsay
#KEYMAP=colemak


function chpwd() {
    emulate -L zsh
    ls -a --color=auto --group-directories-first
}

export TERM="xterm-256color"
export TERMINAL="st"

# Path to your oh-my-zsh installation.
export ZSH=/home/alden/.oh-my-zsh

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git, zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

DEFAULT_USER="alden"

export WORKON_HOME=$HOME/.virtualenvs
source /usr/bin/virtualenvwrapper.sh

export PATH=$PATH:/usr/local/go/bin:/home/alden/go/binexport

alias k=kubectl
#alias cat="pygmentize -O style=monokai -f console256 -g"
alias ls="ls -a --color=auto --group-directories-first"
alias lsa="ls -la --color=auto --group-directories-first"
alias suspend="systemctl suspend"
alias s="sxiv"
alias kmetoo="k get po | awk '/metoo/ || /celery/ {print $1}' | awk '/metoo/{++cnt} /celery/{++cel} {print} END{printf \"There are %s pods for metoo and %s pods for celery\n\", cnt, cel}'"
alias open="xdg-open"
bindkey -v
export EDITOR='vim'

# Don't allow overwrite redirection ">" unless forced with ">|" as a safeguard.
set -o noclobber

# Binds for vi mode
bindkey '^Z' undo
bindkey -M vicmd 'n' vi-backward-char
bindkey -M vicmd 'N' vi-first-non-blank
bindkey -M vicmd 'i' vi-backward-char
bindkey -M vicmd 'i' vi-backward-char
bindkey -M vicmd 'o' vi-forward-char
bindkey -M vicmd 'T' vi-add-eol
bindkey -M vicmd 't' vi-add-next
bindkey -M vicmd 'S' vi-insert-bol
bindkey -M vicmd 's' vi-insert
bindkey -M vicmd 'l' vi-backward-word
bindkey -M vicmd 'L' vi-backward-blank-word
bindkey -M vicmd 'u' vi-forward-word-end
bindkey -M vicmd 'U' vi-forward-blank-word-end
bindkey -M vicmd 'y' vi-forward-word
bindkey -M vicmd 'Y' vi-forward-blank-word
bindkey -M vicmd 'K' vi-rev-repeat-search
bindkey -M vicmd 'k' vi-repeat-search
bindkey -M vicmd 'c' vi-yank
bindkey -M vicmd 'C' vi-yank-whole-line
bindkey -M vicmd 'w' vi-change
bindkey -M vicmd 'W' vi-change-eol
bindkey -M vicmd 's' vi-insert
bindkey -M vicmd 'S' vi-insert-bol
bindkey -M vicmd 'z' undo
bindkey -M vicmd 'Z' redo
bindkey  '\C-x\C-e' edit-command-line
#bindkey -M vicmd 'l' vi-open-line-below

# For vim mappings:
	stty -ixon

alias bell='echo'
alias zshrc='vim /home/alden/.zshrc'

 # Do menu-driven completion.
 zstyle ':completion:*' menu select=2

 # Color completion for some things.
 # http://linuxshellaccount.blogspot.com/2008/12/color-completion-using-zsh-modules-on.html
 zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

 # formatting and messages
 # http://www.masterzen.fr/2009/04/19/in-love-with-zsh-part-one/
 zstyle ':completion:*' verbose yes
 zstyle ':completion:*:descriptions' format "$fg[yellow]%B--- %d%b"
 zstyle ':completion:*:messages' format '%d'
 zstyle ':completion:*:warnings' format "$fg[red]No matches for:$reset_color %d"

 # allows typing ..[TAB] for auto completion of / just like in bash
 zstyle ':completion:*' special-dirs true

alias inst='sudo pacman -S $@'
alias search='sudo pacman -Ss $@'
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $HOME/.config/zsh/prompt.sh


export PATH=$PATH:$HOME/.scripts
export PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/local/go/bin:/home/alden/go/binexport:/home/alden/.scripts:/usr/local/go/bin:/home/alden/go/binexport:/home/alden/.scripts:~/.gem/ruby/2.5.0/bin

#[[ -r "/usr/share/z/z.sh" ]] && source /usr/share/z/z.sh


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/alden/Downloads/google-cloud-sdk/path.zsh.inc' ]; then 
    source '/home/alden/Downloads/google-cloud-sdk/path.zsh.inc';
fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/alden/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then
    source '/home/alden/Downloads/google-cloud-sdk/completion.zsh.inc';
fi
alias k=kubectl


#export PATH=/home/alden/Downloads/google-cloud-sdk/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/local/go/bin:/home/alden/go/binexport:/home/alden/.scripts:/usr/local/go/bin:/home/alden/go/binexport:/home/alden/.scripts:/home/alden/.gem/ruby/2.5.0/bin:~/bin/pycharm-2018.1.4/bin/pycharm.sh/

export JIRA_HOME='/home/alden/etc/jira_home'
alias scrotclip= 'scrot -s ~/foo.png && xclip ~/foo.png && rm ~/foo.png'


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
alias vim=nvim

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /home/alden/src/node/static-site-form-submission/node_modules/tabtab/.completions/serverless.zsh ]] && . /home/alden/src/node/static-site-form-submission/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /home/alden/src/node/static-site-form-submission/node_modules/tabtab/.completions/sls.zsh ]] && . /home/alden/src/node/static-site-form-submission/node_modules/tabtab/.completions/sls.zsh
alias chromium-browser=chromium
export PATH=~/.local/bin:/home/alden/Downloads/google-cloud-sdk/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/local/go/bin:/home/alden/go/binexport:/home/alden/.scripts:/usr/local/go/bin:/home/alden/go/binexport:/home/alden/.scripts:/home/alden/.fzf/bin:/home/alden/.gem/ruby/2.6.0/bin

alias pycharm='/home/alden/bin/pycharm-2018.1.4/bin/pycharm.sh'
alias ranger='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"'
alias metoo-shell="workon metoo && /home/alden/src/django/metoo-backend/metoo-backend && /home/alden/.virtualenvs/metoo/bin/python manage.py shell"
alias grep="grep --color=auto"
alias diff="diff --color=auto"

# 10ms for key sequences
KEYTIMEOUT=1

HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000

# Fix up down fuzzy search with vim mode make search up and down work, so partially type and hit up/down to find relevant stuff
# start typing + [Up-Arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# for `better_exceptions` https://github.com/Qix-/better-exceptions?utm_source=mybridge&utm_medium=blog&utm_campaign=read_more
export BETTER_EXCEPTIONS=1

export READER=zathura
export BROWSER=chromium
# less/man colors

export LESS=-R
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\E[1;36m'     # begin blink
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline

export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

alias audiodl="youtube-dl --output $HOME/Music/downloaded/'%(title)'s.'%(ext)'s --extract-audio --audio-format mp3"

alias convert-raw-to-mp3="ffmpeg -f s16le -ar 48000 -ac 2 -i aplay-D_card0-t_raw-f_S16_LE-r48000-c_2.raw"
alias icp='xclip -selection clipboard -t image/png -i'


if [ -n "$VIRTUAL_ENV" ]; then
  . "$VIRTUAL_ENV/bin/activate"
fi
