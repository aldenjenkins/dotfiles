# The Simple X Hotkey Daemon is the program used by LARBS to map most of the
# dwm-independent commands.  This file is pretty readable, so I'll let you read
# it.

# The keys NOT bound here by sxhkd, but by dwm or i3 are:
# The t thru p keys on the top row
# The f thru ; keys on the home row
# The b key on the bottom row (hides the bar in either case)

super + Return
	$TERMINAL

super + shift + a
	$TERMINAL -e ncpamixer

super + a
        createnewmathscratchpad

super + l
        createnewvpnscratchpad

super + grave
        dmenuunicode

# Application Launching
super + d
        rofi -dpi 1 -show-icons -scroll-method 1 -p "Run" -show drun

# Clipboard script
super + g
        clipmenu -dpi 1 -p "Clipboard" -scroll-method 1

super + shift + k
        notemanager

@super + x
        lock

super + shift + x
        prompt "Shutdown computer?" "sudo shutdown -h now"

super + shift + Escape
        prompt "Leave Xorg?" "killall Xorg"

super + shift + BackSpace
        prompt "Reboot computer?" "sudo -A reboot"

super + w
        dmenurecord

super + r
        $TERMINAL -e lf

super + j
        getpassword

super + c
        ~/dotfiles/creations/random_pywalpaper/run.sh

super + shift + c
        camtoggle

super + shift + m
        selectwallpaperdirforpywal

super + u 
        viewscreenshots

super + y
        takescreenshot

super + p
        dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause

super + b
        dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next

super + z
        dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

#super + shift + l
#        i3resize left
        
#super + shift + u
#        i3resize down

super + shift + q
	xcqr

#super + shift + y
#        i3resize up

#super + shift + semicolon
#        i3resize right

XF86AudioMute 
        amixer sset Master toggle

XF86AudioLowerVolume    
        lmc down 1

XF86AudioRaiseVolume
        lmc up 1

shift + XF86AudioLowerVolume
        lmc down 10

shift + XF86AudioRaiseVolume 
        lmc up 10

XF86MonBrightnessDown   
        xbacklight -dec 1

XF86MonBrightnessUp 
        xbacklight -inc 1

shift + XF86MonBrightnessDown 
        xbacklight -dec 10

shift + XF86MonBrightnessUp 
        xbacklight -inc 10

#super + n
#        i3_tmux_vim_focus left
#
#super + e
#        i3_tmux_vim_focus down
#
#super + i
#        i3_tmux_vim_focus up
#
#super + o
#        i3_tmux_vim_focus right




########################################################################


#
# wm independent hotkeys
#

# terminal emulator
#super + Return
#	urxvt

# program launcher
#super + @space
#	dmenu_run

# make sxhkd reload its configuration files:
#super + Escape
#	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + shift + r
	bspc wm -r

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
#super + m
#	bspc desktop -l next

# send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
#super + g
#	bspc node -s biggest

#
# state/flags
#

# set the window state
#super + {t,shift + t,s,f}
#	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
super + {space,shift + space, f}
        bspc node -t {tiled, floating, \~fullscreen}

# set the node flags
#super + ctrl + {m,x,y,z}
#	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {n,e,i,o}
	bspc node -f {west,south,north,east}

super + shift + {n,e,i,o}
    d={west,south,north,east}; bspc node -s $d --follow || bspc node -m $d --follow

# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
#super + {_,shift + }c
#	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
#super + bracket{left,right}
#	bspc desktop -f {prev,next}.local

super + {1,2,3,4,5,6,7,8,9,0}
  bspc desktop -f {Mail,Spotify,Krita,Slack,Web,Pycharm,tmp1,tmp2,tmp3,Zoom}

super + {1-9,0}
        switchdesktopbspwm '^{1-9,10}'

# focus the last node/desktop
super + Tab
	bspc node -f last

# focus the older or newer node in the focus history
#super + {o,i}
#	bspc wm -h off; \
#	bspc node {older,newer} -f; \
#	bspc wm -h on

# focus or send to the given desktop
#super + {_,shift + }{1-9,0}
#	bspc {desktop -f,node -d} '^{1-9,10}'
super + shift + {1,2,3,4,5,6,7,8,9,0}
	bspc node -d {Mail,Spotify,Krita,Slack,Web,Pycharm,tmp1,tmp2,tmp3,Zoom}

#
# preselect
#

# preselect the direction
#super + ctrl + {n,e,i,o}
#	bspc node -p {west,south,north,east}

# preselect the ratio
#super + ctrl + {1-9}
#	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
#super + ctrl + space
#	bspc node -p cancel

# cancel the preselection for the focused desktop
#super + ctrl + shift + space
#	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# contract a window by moving one of its side inward
#super + alt + {l,u,y,;}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}


# expand a window by moving one of its side outward
super + shift + {l,u,y,semicolon}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


## Gaps resize

# adjust gap size
super + {minus,equal}
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 2 ))

# Focused desktop window gap
super + button{4,5}
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 2 ))

# Global window gaps
super + shift + button{4,5}
    bspc config window_gap $(( $(bspc config window_gap) {-,+} 2 ))
